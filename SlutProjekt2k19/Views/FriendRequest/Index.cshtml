@using System.Security.Claims
@model IEnumerable<SlutProjekt2k19.Models.Profile>

@{
    ViewBag.Title = "Friend Requests";

    var claimsIdentity = (ClaimsIdentity) User.Identity;
    var claim = claimsIdentity.FindFirst(ClaimTypes.NameIdentifier);
    var userId = claim.Value;

    // Försöker lösa att man inte ska kunna se folk man redan lagt till i listan

    //var db = new ApplicationDbContext();

    //var friendRequestList = db.FriendRequests.ToList();
    //var friendFromList = friendRequestList.Select(friend => friend.From).ToList();
    //var friendToList = friendRequestList.Select(friend => friend.Id).ToList();

    //var contactList = db.Contactlists.ToList();
    //var friend1List = contactList.Select(friend1 => friend1.Friend1).ToList();
    //var friend2List = contactList.Select(friend2 => friend2.Friend2).ToList();

}

<div class="container">
    <div class="row">
        <div class="col">
            <h2>Search for a Friend by Name</h2>
            @using (Html.BeginForm("Index", "FriendRequests", FormMethod.Get))
            {
                <form asp-controller="Profiles" asp-action="Index">
                    <div class="input-group">
                        <input type="text" class="form-control" name="SearchString">
                        <input type="submit" class="btn btn-primary" value="Search"/>
                    </div>
                </form>
            }
        </div>
        <div class="col">
            <h2>Add Friend with their User Number</h2>

            @using (Html.BeginForm("SendFriendRequest", "FriendRequests", FormMethod.Get))
            {
                <div class="input-group">
                    <input type="text" class="form-control" name="id">
                    <input type="submit" class="btn btn-primary" value="Add Friend"/>
                </div>
            }
        </div>
    </div>
</div>
<hr/>
<table class="table textcolor">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Image)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Bio)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Age)
        </th>
        <th>
            <a>User Number</a>
        </th>
    </tr>
    @foreach (var item in Model)
    {
        if (!item.Id.Equals(userId))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @if (item.Image != null)
                    {
                        <img src="@Url.Content(item.Image)" style="height: 50px; width: 50px;" alt="Profile_Image">
                    }
                    else
                    {
                        <img src="~/Images/Test.jpg" style="height: 50px; width: 50px;" alt="Profile_Image">
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Bio)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserCredentials)
                </td>
            </tr>
        }
    }
</table>